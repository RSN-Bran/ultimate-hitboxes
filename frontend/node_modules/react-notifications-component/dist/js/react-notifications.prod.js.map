{"version":3,"sources":["webpack://ReactNotifications/webpack/bootstrap","webpack://ReactNotifications/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://ReactNotifications/./src/utils/constants.ts","webpack://ReactNotifications/./src/store/index.ts","webpack://ReactNotifications/./src/utils/helpers.ts","webpack://ReactNotifications/./src/utils/timer.ts","webpack://ReactNotifications/./src/components/Notification.tsx","webpack://ReactNotifications/./src/components/Container.tsx","webpack://ReactNotifications/./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","DEFAULT_CONTAINER_VALUES","NOTIFICATION_BASE_CLASS","NOTIFICATION_CONTAINER","INSERTION","NOTIFICATION_TYPE","REMOVAL","incrementCounter","this","counter","getCounter","add","notification","parsedNotification","options","userDefinedTypes","defaultNotificationWidth","id","type","insert","content","container","animationIn","animationOut","slidingEnter","slidingExit","touchRevert","touchSlidingExit","dismiss","width","onRemoval","store","toString","toLowerCase","definedTypes","SUCCESS","DANGER","INFO","DEFAULT","WARNING","defaultUserDefinedTypes","option","defaults","duration","click","touch","onScreen","pauseOnHover","waitForAnimation","showIcon","keys","forEach","prop","defaultDismiss","timingFunction","delay","defaultTransition","touchExit","swipe","fade","parseNotification","types","parameters","addNotification","removeNotification","removeAllNotifications","isBottomContainer","BOTTOM_FULL","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","isTopContainer","TOP_FULL","TOP_LEFT","TOP_RIGHT","TOP_CENTER","getHtmlClassesForType","base","htmlClassesForExistingType","foundType","find","q","concat","htmlClasses","getTransition","transition","transitionOptions","Timer","callback","remaining","resume","clearTimeout","timerId","Date","now","start","setTimeout","Component","props","super","onClick","CLICK","onTouchStart","event","pageX","touches","setState","parentStyle","startX","currentX","position","onTouchMove","state","toggleRemoval","distance","offsetWidth","rootElementRef","current","swipeTo","window","innerWidth","left","diffX","Math","abs","hasFullySwiped","t1","t2","onTransitionEnd","TOUCH","touchEnabled","opacity","height","overflow","onTouchEnd","onMouseEnter","timer","pause","animationPlayState","onMouseLeave","createRef","isMobile","htmlClassList","isFullWidthNotification","CENTER","indexOf","clear","notificationsCount","willSlide","count","TOP","BOTTOM","shouldNotificationHaveSliding","scrollHeight","TIMEOUT","requestAnimationFrame","prevState","hasBeenRemoved","MANUAL","removalFlag","onAnimationEnd","style","animationName","animationDuration","animationTimingFunction","animationFillMode","animationDelay","className","CustomContent","hasMouseEvents","join","isValidElement","title","message","renderTimer","ref","renderCustomContent","renderNotification","handleResize","windowWidth","notifications","remove","map","filter","nId","breakpoint","undefined","register","addEventListener","removeEventListener","length","mobileNotifications","top","bottom","push","getNotificationsForMobileView","renderNotifications","items","topLeft","topRight","topCenter","bottomLeft","bottomRight","bottomCenter","center","topFull","bottomFull","getNotificationsForEachContainer","renderMobileNotifications","renderScreenNotifications"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,U,gHCAlB,MAAMC,GACD,EADCA,EAEC,IAFDA,EAGe,IAGfC,EAA0B,qBAEvC,IAAYC,EAYAC,EAKAC,EAQAC,GAzBZ,SAAYH,GACV,4BACA,8BACA,gCACA,sBACA,wBACA,0BACA,kBACA,sBACA,4BATF,CAAYA,MAAsB,KAYlC,SAAYC,GACV,YACA,kBAFF,CAAYA,MAAS,KAKrB,SAAYC,GACV,oBACA,kBACA,cACA,oBACA,oBALF,CAAYA,MAAiB,KAQ7B,SAAYC,GACV,oBACA,gBACA,gBACA,kBAJF,CAAYA,MAAO,KCqCJ,UApDf,MACE,cAaQ,KAAAC,iBAAmB,IAAOC,KAAKC,SAAW,EAmB3C,KAAAC,WAAa,IAAMF,KAAKC,QA/B7BD,KAAKC,QAAU,EACfD,KAAKG,IAAM,KAaN,gBAAgBC,GAOrBJ,KAAKD,mBAEL,MAAMM,ECsLH,SACLC,EACAC,EACAC,GAEA,MAAMJ,EAAeE,GACf,GACJG,EAAE,KACFC,EAAI,OACJC,EAAM,QACNC,EAAO,UACPC,EAAS,YACTC,EAAW,aACXC,EAAY,aACZC,EAAY,YACZC,EAAW,YACXC,EAAW,iBACXC,EAAgB,QAChBC,EAAO,MACPC,EAAK,UACLC,GACElB,EAEJA,EAAaK,GAAKA,GAAMc,EAAMrB,aAAasB,WAC3CpB,EAAaM,KAAOE,EAAU,KAAQF,EAAKe,cAEvClB,IAAqBK,IACvBR,EAAaG,iBAlDjB,SACEH,EACAsB,GAEA,MAAM,QAAEd,EAAO,KAAEF,GAASN,EAC1B,GAAIQ,EACF,OAGF,GACEF,IAAS,EAAGiB,SACZjB,IAAS,EAAGkB,QACZlB,IAAS,EAAGmB,MACZnB,IAAS,EAAGoB,SACZpB,IAAS,EAAGqB,UACXL,EAED,OAGF,OAAOA,EA8B2BM,CAAwB5B,EAAcG,IAGxEH,EAAaiB,MAAQ,EAAOA,GAASb,EAA2Ba,EAChEjB,EAAaS,UAAYA,EAAUY,cACnCrB,EAAaO,QAAUA,GAAU,OAAOc,cACxCrB,EAAagB,QAjFf,SAAwBA,GACtB,MAAMa,EAASb,EACTc,EAAqB,CACzBC,SAAU,EACVC,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,cAAc,EACdC,kBAAkB,EAClBC,UAAU,GAGZ,IAAKR,EACH,OAAOC,EAST,OANAhE,OAAOwE,KAAKR,GAAUS,QAASC,IACzB,EAAOX,EAAOW,MAChBX,EAAOW,GAAQV,EAASU,MAIrBX,EA2DgBY,CAAezB,GACtChB,EAAaU,YAAcA,GAAe,GAC1CV,EAAaW,aAAeA,GAAgB,GAC5CX,EAAakB,UAAYA,GAAa,SAEtC,MAAM5C,EAAI,CAACyD,EAAkBW,EAAwBC,KAAkB,CACrEZ,WACAW,iBACAC,UAGF3C,EAAaY,aAAegC,EAAkBhC,EAActC,EAAE,IAAK,SAAU,IAC7E0B,EAAaa,YAAc+B,EAAkB/B,EAAavC,EAAE,IAAK,SAAU,IAC3E0B,EAAac,YAAc8B,EAAkB9B,EAAaxC,EAAE,IAAK,SAAU,IAE3E,MAAMuE,EAAY9B,GAAqB,GACjC+B,EAAQD,EAAUC,OAAU,GAC5BC,EAAOF,EAAUE,MAAS,GAKhC,OAJA/C,EAAae,iBAAmB8B,EAChC7C,EAAae,iBAAiB+B,MAAQF,EAAkBE,EAAOxE,EAAE,IAAK,SAAU,IAChF0B,EAAae,iBAAiBgC,KAAOH,EAAkBG,EAAMzE,EAAE,IAAK,SAAU,IAEvE0B,ED7OsBgD,CACzBhD,EACAJ,KAAKqD,MACLrD,KAAKQ,0BAEP,OAAOR,KAAKG,IAAIE,GAKX,SAASiD,GACd,MAAM,gBACJC,EAAe,mBACfC,EAAkB,uBAClBC,EAAsB,MACtBJ,EAAK,yBACL7C,GACE8C,EAEJtD,KAAKG,IAAMoD,EACXvD,KAAKwD,mBAAqBA,EAC1BxD,KAAKyD,uBAAyBA,EAC9BzD,KAAKQ,yBAA2BA,EAChCR,KAAKqD,MAAQA,IClDV,MAAM,EAAUnE,GAAgBA,QAEhC,SAASwE,EAAkB7C,GAChC,OACEA,IAAclB,EAAuBgE,aACrC9C,IAAclB,EAAuBiE,aACrC/C,IAAclB,EAAuBkE,cACrChD,IAAclB,EAAuBmE,cAIlC,SAASC,EAAelD,GAC7B,OACEA,IAAclB,EAAuBqE,UACrCnD,IAAclB,EAAuBsE,UACrCpD,IAAclB,EAAuBuE,WACrCrD,IAAclB,EAAuBwE,WAwClC,SAASC,EAAsBhE,GACpC,MAAM,KAAEM,EAAI,QAAEE,EAAO,iBAAEL,GAAqBH,EACtCiE,EAAO,CAAC3E,GACd,GAAIkB,EACF,OAAOyD,EAGT,GAAI,EAAO9D,GACT,OAzBG,SAAoCG,GACzC,OAAQA,GACN,KAAK,EAAGoB,QACN,MAAO,CAACpC,EAAyB,+BACnC,KAAK,EAAGiC,QACN,MAAO,CAACjC,EAAyB,+BACnC,KAAK,EAAGkC,OACN,MAAO,CAAClC,EAAyB,8BACnC,KAAK,EAAGqC,QACN,MAAO,CAACrC,EAAyB,+BACnC,KAAK,EAAGmC,KACN,MAAO,CAACnC,EAAyB,4BACnC,QACE,MAAO,CAACA,IAYH4E,CAA2B5D,GAGpC,MAAM6D,EAAYhE,EAAiBiE,KAAMC,GAAMA,EAAE1G,OAAS2C,GAC1D,OAAO2D,EAAKK,OAAOH,EAAUI,aAoExB,SAASC,GAAc,SAAEzC,EAAQ,eAAEW,EAAc,MAAEC,GAAsB5D,GAC9E,MAAO,GAAGgD,OAAchD,KAAY2D,KAAkBC,MAGxD,SAASC,EACP6B,GACA,SAAE1C,EAAQ,eAAEW,EAAc,MAAEC,IAE5B,MAAM+B,EAAoBD,GAAe,GAczC,OAZI,EAAOC,EAAkB3C,YAC3B2C,EAAkB3C,SAAWA,GAG3B,EAAO2C,EAAkBhC,kBAC3BgC,EAAkBhC,eAAiBA,GAGjC,EAAOgC,EAAkB/B,SAC3B+B,EAAkB/B,MAAQA,GAGrB+B,EC9KM,MAAMC,EACnB,YAAYC,EAAoBjC,GAC9B/C,KAAKgF,SAAWA,EAChBhF,KAAKiF,UAAYlC,EAEjB/C,KAAKkF,SAQA,QACLC,aAAanF,KAAKoF,SAClBpF,KAAKiF,WAAaI,KAAKC,MAAQtF,KAAKuF,MAGtC,SACEvF,KAAKuF,MAAQF,KAAKC,MAClBH,aAAanF,KAAKoF,SAClBpF,KAAKoF,QAAUI,WAAWxF,KAAKgF,SAAUhF,KAAKiF,WAGhD,QACEE,aAAanF,KAAKoF,UCctB,MAAM,UAAqB,IAAMK,UAC/B,YAAYC,GACVC,MAAMD,GAkHR,KAAAE,QAAU,KACR,MACExF,cAAc,QAAEgB,IACdpB,KAAK0F,OACLtE,EAAQgB,OAAShB,EAAQqB,WAC3BzC,KAAKwD,mBAAmB1D,EAAQ+F,QAIpC,KAAAC,aAAgBC,IACd,MAAM,MAAEC,GAAUD,EAAME,QAAQ,GAEhCjG,KAAKkG,SAAS,EAAGC,kBAAkB,CACjCC,OAAQJ,EACRK,SAAUL,EACVG,YAAa,OAAF,wBACNA,GAAW,CACdG,SAAU,iBAKhB,KAAAC,YAAeR,IACb,MAAM,MAAEC,GAAUD,EAAME,QAAQ,IAC1B,OAAEG,GAAWpG,KAAKwG,OAClB,cACJC,EACArG,cAAc,GACZK,EAAE,UACFa,EAAS,YACTL,EACAE,kBAAkB,MAAE+B,EAAK,KAAEC,KAE3BnD,KAAK0F,MAEHgB,EAAWV,EAAQI,GACjBO,YAAatF,GAAUrB,KAAK4G,eAAeC,QAC7CC,EAAUC,OAAOC,WAAa3F,EAC9B4F,GAAUjB,EAAQI,GAAU,EAAIU,GAAWA,GAApC,KAEb,GF/JG,SAAwBI,EAAe7F,GAG5C,OAFoB8F,KAAKC,IAAIF,IACD,GAAa7F,EE6JnCgG,CAAeX,EAAUrF,GAAQ,CACnC,MAAMiG,EAAK1C,EAAc1B,EAAO,QAC1BqE,EAAK3C,EAAczB,EAAM,WACzBqE,EAAkB,KACtBf,EAAchG,EAAI,IAAMa,EAAUb,EAAIX,EAAQ2H,SAGhD,OAAOzH,KAAKkG,SAAS,EAAGC,kBAAkB,CACxCuB,cAAc,EACdvB,YAAa,OAAF,wBACNA,GAAW,CACdc,OACAU,QAAS,EACT9C,WAAY,GAAGyC,MAAOC,MAExBC,gBAAiB,KACfxH,KAAKkG,SAAS,EAAGC,kBAAkB,CACjCA,YAAa,OAAF,wBACNA,GAAW,CACdyB,OAAQ,MACRC,SAAU,SACVhD,WAAYD,EAAc3D,EAAa,YAEzCuG,yBAMR,OAAOxH,KAAKkG,SAAS,EAAGC,kBAAkB,CACxCE,SAAUL,EACVG,YAAa,OAAF,wBACNA,GAAW,CACdc,KAAS,EAAIP,EAAP,WAKZ,KAAAoB,WAAa,KACX,MACE1H,cAAc,YAAEc,IACdlB,KAAK0F,MAET1F,KAAKkG,SAAS,EAAGC,kBAAkB,CACjCA,YAAa,OAAF,wBACNA,GAAW,CACdc,KAAM,EACNpC,WAAYD,EAAc1D,EAAa,cAK7C,KAAA6G,aAAe,KACT/H,KAAKgI,MACPhI,KAAKgI,MAAMC,QAEXjI,KAAKkG,SAAS,CAAEgC,mBAAoB,YAIxC,KAAAC,aAAe,KACTnI,KAAKgI,MACPhI,KAAKgI,MAAM9C,SAEXlF,KAAKkG,SAAS,CAAEgC,mBAAoB,aAzNtClI,KAAK4G,eAAiB,IAAMwB,YAE5B,MAAM,yBAAE5H,EAAwB,aAAEJ,EAAY,SAAEiI,GAAa3C,GACvD,MAAErE,EAAK,UAAER,GAAcT,EAE7BJ,KAAKwG,MAAQ,CACXL,YAAa,CACXyB,OAAQ,MACRC,SAAU,SACVxG,OAAUA,GAAgBb,GAAnB,MAET8H,cAAelE,EAAsBhE,GACrC8H,mBAAoB,UACpBR,cAAc,GAGhB,MAAMa,GAA4H,IAAlG,CAAC,EAAGvE,SAAU,EAAGL,YAAa,EAAGQ,WAAY,EAAGL,cAAe,EAAG0E,QAAQC,QAAQ5H,IAC9GwH,GAAYE,KACdvI,KAAKwG,MAAML,YAAY9E,MAAQ,QAOnC,uBACMrB,KAAKgI,OACPhI,KAAKgI,MAAMU,QAIf,oBACE,MAAM,aAAEtI,EAAY,mBAAEuI,GAAuB3I,KAAK0F,OAEhDtE,SAAS,SAAEe,EAAQ,SAAEG,IACnBlC,EACEwI,EFpCH,SAAuCxI,EAA6ByI,GACzE,QAAIA,GAAS,IAKXA,EAAQ,IACNzI,EAAaO,SAAWf,EAAUkJ,KAAO/E,EAAe3D,EAAaS,YACpET,EAAaO,SAAWf,EAAUmJ,QAAUrF,EAAkBtD,EAAaS,YAC5ET,EAAaS,YAAclB,EAAuB6I,QE2BlCQ,CAA8B5I,EAAcuI,IACxD,aAAEM,GAAiBjJ,KAAK4G,eAAeC,QAEvCW,EAAkB,KACtB,IAAKrF,GAAYG,EAAU,OAE3BtC,KAAKgI,MAAQ,IAAIjD,EADA,IAAM/E,KAAKwD,mBAAmB1D,EAAQoJ,SACtB/G,IAWnCnC,KAAKkG,SACH,EAAGC,aAAe9E,aAAc,CAC9B8E,YAAa,CACX9E,QACAuG,OAAWqB,EAAH,KACRpE,WAAY+D,EAAYhE,EAAcxE,EAAaY,aAAc,UAAY,eAE/EwG,oBAfa,KACf2B,sBAAsB,KACpBnJ,KAAKkG,SAAUkD,IAAc,CAC3Bd,cAAe,IAAIlI,EAAaU,eAAgBsI,EAAUd,sBAkBlE,oBAAmB,eAAEe,IACfrJ,KAAK0F,MAAM2D,iBAAmBA,GAChCrJ,KAAKwD,mBAAmB1D,EAAQwJ,QAIpC,mBAAmBC,GACjB,MAAM,aAAEnJ,EAAY,cAAEqG,GAAkBzG,KAAK0F,OACvC,GACJjF,EAAE,UACFa,EACAF,SAAS,iBAAEoB,IACTpC,EAEEkI,EAAgB,IAAIlI,EAAaW,gBAAiBqD,EAAsBhE,IACxEoH,EAAkB,IAAMf,EAAchG,EAAI,IAAMa,EAAUb,EAAI8I,IAC9DpD,EAA4B,CAChCyB,OAAQ,MACRC,SAAU,SACVhD,WAAYD,EAAcxE,EAAaa,YAAa,WAGtD,OAAIuB,EACKxC,KAAKkG,SAAS,EAAGC,aAAe9E,aAAc,CACnDiH,gBACAkB,eAAgB,KACdxJ,KAAKkG,SAAS,CACZC,YAAa,OAAF,QACT9E,SACG8E,GAELqB,wBAMDxH,KAAKkG,SAAS,EAAGC,aAAe9E,aAAc,CACnD8E,YAAa,OAAF,QACT9E,SACG8E,GAELqB,kBACAc,mBAgHJ,cACE,MACElI,cAAc,QAAEgB,IACdpB,KAAK0F,OACH,SAAEvD,EAAQ,SAAEG,GAAalB,GACzB,mBAAE8G,GAAuBlI,KAAKwG,MAEpC,IAAKrE,IAAaG,EAChB,OAGF,MAAMmH,EAAQ,CACZC,cAAe,QACfC,kBAAsBxH,EAAH,KACnByH,wBAAyB,SACzBC,kBAAmB,WACnBC,eAAgB,IAChB5B,sBAIF,OACE,yBAAK6B,UAAU,uBACb,yBACEA,UAAU,6BACVP,eALiB,IAAMxJ,KAAKwD,mBAAmB1D,EAAQoJ,SAMvDO,MAAOA,KAMf,sBACE,MAAM,cAAEnB,GAAkBtI,KAAKwG,OAE7BpG,cAAc,GACZK,EACAG,QAASoJ,EACT5I,SAAS,SAAEe,EAAQ,aAAEI,KAErBvC,KAAK0F,MAEHuE,EAAiB9H,EAAW,GAAKI,EAEvC,OACE,yBACEwH,UAAW,GAAG,IAAIzB,GAAe4B,KAAK,KACtCnC,aAAckC,EAAiBjK,KAAK+H,aAAe,KACnDI,aAAc8B,EAAiBjK,KAAKmI,aAAe,MAElD,IAAMgC,eAAeH,GAAiBA,EAAgB,kBAACA,EAAa,iBAAK,CAAEvJ,SAKlF,qBACE,MACEL,cAAc,MACZgK,EAAK,QACLC,EACAjJ,SAAS,SAAEqB,EAAQ,SAAEN,EAAQ,aAAEI,KAE/BvC,KAAK0F,OACH,cAAE4C,GAAkBtI,KAAKwG,MACzByD,EAAiB9H,EAAW,GAAKI,EAEvC,OACE,yBACEwH,UAAW,GAAG,IAAIzB,GAAe4B,KAAK,KACtCnC,aAAckC,EAAiBjK,KAAK+H,aAAe,KACnDI,aAAc8B,EAAiBjK,KAAKmI,aAAe,MAEnD,yBAAK4B,UAAU,yBACZtH,GAAY,yBAAKsH,UAAU,sBAAsBnE,QAAS5F,KAAK4F,UAC/DwE,GAAS,yBAAKL,UAAU,uBAAuBK,GAChD,yBAAKL,UAAU,yBAAyBM,GACvCrK,KAAKsK,gBAMd,SACE,MACElK,cAAc,QACZQ,EACAQ,SAAS,MAAEgB,KAEXpC,KAAK0F,OACH,YAAES,EAAW,eAAEqD,EAAc,gBAAEhC,EAAe,aAAEE,GAAiB1H,KAAKwG,MAE5E,OACE,yBACE+D,IAAKvK,KAAK4G,eACVhB,QAASxD,EAAQpC,KAAK4F,QAAU,KAChCmE,UAAU,eACVN,MAAOtD,EACPqD,eAAgBA,EAChBhC,gBAAiBA,EACjB1B,aAAc4B,EAAe1H,KAAK8F,aAAe,KACjDS,YAAamB,EAAe1H,KAAKuG,YAAc,KAC/CuB,WAAYJ,EAAe1H,KAAK8H,WAAa,MAE5ClH,EAAUZ,KAAKwK,sBAAwBxK,KAAKyK,uBAMtC,Q,KCzVf,MAAM,UAAkB,IAAMhF,UAC5B,YAAYC,GACVC,MAAMD,GA6BR,KAAAgF,aAAe,KACb1K,KAAKkG,SAAS,CAAEyE,YAAa5D,OAAOC,cAGtC,KAAA7G,IAAOC,IACLJ,KAAKkG,SAAS,EAAG0E,oBAAoB,CACnCA,cAC0B,QAAxBxK,EAAaO,OACT,CAACP,KAAiBwK,GAClB,IAAIA,EAAexK,MAGpBA,EAAaK,IAGtB,KAAAoK,OAAUpK,IACRT,KAAKkG,SAAS,EAAG0E,oBAAoB,CACnCA,cAAeA,EAAcE,IAAK1K,IAC5BA,EAAaK,KAAOA,IACtBL,EAAaiJ,gBAAiB,GAGzBjJ,QAKb,KAAAqD,uBAAyB,KACvBzD,KAAKkG,SAAS,CACZ0E,cAAe5K,KAAKwG,MAAMoE,cAAcE,IAAK1K,GAAkB,OAAD,wBACzDA,GAAY,CACfiJ,gBAAgB,QAKtB,KAAA5C,cAAgB,CAAChG,EAAYuE,KAC3BhF,KAAKkG,SACH,EAAG0E,oBAAoB,CACrBA,cAAeA,EAAcG,OAAO,EAAGtK,GAAIuK,KAAUA,IAAQvK,KAE/DuE,IApEFhF,KAAKwG,MAAQ,CACX6B,SAAU,EAAO3C,EAAM2C,UAAY,EAAe3C,EAAM2C,SACxD4C,WAAY,EAAOvF,EAAMuF,YAAc,EAAiBvF,EAAMuF,WAC9DL,cAAe,GACfD,iBAAaO,GAIjB,oBACE,MAAM,MAAE7H,EAAK,yBAAE7C,GAA6BR,KAAK0F,MAEjDnE,EAAM4J,SAAS,CACb5H,gBAAiBvD,KAAKG,IACtBqD,mBAAoBxD,KAAK6K,OACzBpH,uBAAwBzD,KAAKyD,uBAC7BjD,yBAA0BA,GAA4B,EACtD6C,UAGFrD,KAAKkG,SAAS,CAAEyE,YAAa5D,OAAOC,aACpCD,OAAOqE,iBAAiB,SAAUpL,KAAK0K,cAGzC,uBACE3D,OAAOsE,oBAAoB,SAAUrL,KAAK0K,cAgD5C,oBAAoBE,EAAgCvC,GAClD,OAAOuC,EAAcE,IAAK1K,GACxB,kBAAC,EAAiB,CAChBK,GAAIL,EAAaK,GACjB1B,IAAKqB,EAAaK,GAClB4H,SAAUA,EACV7H,yBAA0BR,KAAK0F,MAAMlF,yBACrCJ,aAAcA,EACdqG,cAAezG,KAAKyG,cACpBkC,mBAAoBiC,EAAcU,OAClCjC,eAAgBjJ,EAAaiJ,kBAKnC,0BAA0B3D,GACxB,MAAM,UAAEqE,EAAS,GAAEtJ,GAAOiF,GACpB,cAAEkF,GAAkB5K,KAAKwG,MACzB+E,EHlCH,SAAuCX,GAC5C,MAAMY,EAAuB,GACvBC,EAA0B,GAahC,OAXAb,EAAcjI,QAASvC,IACrB,MAAM,UAAES,GAAcT,GAChB,OAAEoI,GAAW7I,EAEfoE,EAAelD,IAAcA,IAAc2H,EAC7CgD,EAAIE,KAAKtL,GACAsD,EAAkB7C,IAC3B4K,EAAOC,KAAKtL,KAIT,CAAEoL,MAAKC,UGmBgBE,CAA8Bf,GACpDY,EAAMxL,KAAK4L,oBAAoBL,EAAoBC,KAAK,GACxDC,EAASzL,KAAK4L,oBAAoBL,EAAoBE,QAAQ,GAEpE,OACE,yBAAKhL,GAAIA,EAAI1B,IAAI,SAASgL,UAAW,4BAA2BA,GAAa,KAC3E,yBAAKA,UAAU,sCAAsCyB,GACrD,yBAAKzB,UAAU,yCAAyC0B,IAK9D,0BAA0B/F,GACxB,MAAM,UAAEqE,EAAS,GAAEtJ,GAAOiF,GACpB,cAAEkF,GAAkB5K,KAAKwG,MACzBqF,EH/BH,SAA0CjB,GAC/C,MAAMkB,EAA2B,GAC3BC,EAA4B,GAC5BC,EAA6B,GAC7BC,EAA8B,GAC9BC,EAA+B,GAC/BC,EAAgC,GAChCC,EAA0B,GAC1BC,EAA2B,GAC3BC,EAA8B,GAyBpC,OAvBA1B,EAAcjI,QAASvC,IACrB,MAAM,UAAES,GAAcT,EAClBS,IAAclB,EAAuBqE,SACvCqI,EAAQX,KAAKtL,GACJS,IAAclB,EAAuBgE,YAC9C2I,EAAWZ,KAAKtL,GACPS,IAAclB,EAAuBsE,SAC9C6H,EAAQJ,KAAKtL,GACJS,IAAclB,EAAuBuE,UAC9C6H,EAASL,KAAKtL,GACLS,IAAclB,EAAuBwE,WAC9C6H,EAAUN,KAAKtL,GACNS,IAAclB,EAAuBiE,YAC9CqI,EAAWP,KAAKtL,GACPS,IAAclB,EAAuBkE,aAC9CqI,EAAYR,KAAKtL,GACRS,IAAclB,EAAuBmE,cAC9CqI,EAAaT,KAAKtL,GACTS,IAAclB,EAAuB6I,QAC9C4D,EAAOV,KAAKtL,KAIT,CACLiM,UACAC,aACAR,UACAC,WACAC,YACAC,aACAC,cACAC,eACAC,UGZcG,CAAiC3B,GACzCyB,EAAUrM,KAAK4L,oBAAoBC,EAAMQ,SAAS,GAClDC,EAAatM,KAAK4L,oBAAoBC,EAAMS,YAAY,GACxDR,EAAU9L,KAAK4L,oBAAoBC,EAAMC,SAAS,GAClDC,EAAW/L,KAAK4L,oBAAoBC,EAAME,UAAU,GACpDC,EAAYhM,KAAK4L,oBAAoBC,EAAMG,WAAW,GACtDC,EAAajM,KAAK4L,oBAAoBC,EAAMI,YAAY,GACxDC,EAAclM,KAAK4L,oBAAoBC,EAAMK,aAAa,GAC1DC,EAAenM,KAAK4L,oBAAoBC,EAAMM,cAAc,GAC5DC,EAASpM,KAAK4L,oBAAoBC,EAAMO,QAAQ,GAEtD,OACE,yBAAK3L,GAAIA,EAAI1B,IAAI,SAASgL,UAAW,4BAA2BA,GAAa,KAC3E,yBAAKA,UAAU,oCAAoCsC,GACnD,yBAAKtC,UAAU,uCAAuCuC,GACtD,yBAAKvC,UAAU,oCAAoC+B,GACnD,yBAAK/B,UAAU,qCAAqCgC,GACpD,yBAAKhC,UAAU,uCAAuCkC,GACtD,yBAAKlC,UAAU,wCAAwCmC,GACvD,yBAAKnC,UAAU,sCAAsCiC,GACrD,yBAAKjC,UAAU,kCACb,yBAAKA,UAAU,eAAeqC,IAEhC,yBAAKrC,UAAU,yCAAyCoC,IAK9D,SACE,MAAM,SAAE9D,GAAarI,KAAK0F,OACpB,YAAEiF,EAAW,WAAEM,GAAejL,KAAKwG,MAEzC,OAAI6B,GAAYsC,GAAeM,EACtBjL,KAAKwM,0BAA0BxM,KAAK0F,OAGtC1F,KAAKyM,0BAA0BzM,KAAK0F,QAIhC,QC3KA","file":"js/react-notifications.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"react\");","export const DEFAULT_CONTAINER_VALUES = {\r\n  isMobile: true,\r\n  breakpoint: 768,\r\n  defaultNotificationWidth: 325\r\n};\r\n\r\nexport const NOTIFICATION_BASE_CLASS = 'notification__item';\r\n\r\nexport enum NOTIFICATION_CONTAINER {\r\n  BOTTOM_LEFT = 'bottom-left',\r\n  BOTTOM_RIGHT = 'bottom-right',\r\n  BOTTOM_CENTER = 'bottom-center',\r\n  TOP_LEFT = 'top-left',\r\n  TOP_RIGHT = 'top-right',\r\n  TOP_CENTER = 'top-center',\r\n  CENTER = 'center',\r\n  TOP_FULL = 'top-full',\r\n  BOTTOM_FULL = 'bottom-full'\r\n}\r\n\r\nexport enum INSERTION {\r\n  TOP = 'top',\r\n  BOTTOM = 'bottom'\r\n}\r\n\r\nexport enum NOTIFICATION_TYPE {\r\n  SUCCESS = 'success',\r\n  DANGER = 'danger',\r\n  INFO = 'info',\r\n  DEFAULT = 'default',\r\n  WARNING = 'warning'\r\n}\r\n\r\nexport enum REMOVAL {\r\n  TIMEOUT = 'timeout',\r\n  CLICK = 'click',\r\n  TOUCH = 'touch',\r\n  MANUAL = 'manual'\r\n}\r\n\r\nexport const ERROR = {\r\n  ANIMATION_IN: 'Validation error. `animationIn` option must be an array',\r\n  ANIMATION_OUT: 'Validation error. `animationOut` option must be an array',\r\n\r\n  DISMISS_REQUIRED: 'Validation error. `duration` property of `dismiss` option is required',\r\n  DISMISS_NUMBER: 'Validation error. `duration` property of `dismiss` option must be a Number',\r\n  DISMISS_POSITIVE:\r\n    'Validation error. `duration` property of `dismiss` option must be a positive Number',\r\n  DISMISS_CLICK_BOOL: 'Validation error. `click` property of `dismiss` option must be a Boolean',\r\n  DISMISS_TOUCH_BOOL: 'Validation error. `touch` property of `dismiss` option must be a Boolean',\r\n  DISMISS_WAIT:\r\n    'Validation error. `waitForAnimation` property of `dismiss` option must be a Boolean',\r\n  DISMISS_PAUSE_BOOL:\r\n    'Validation error. `pauseOnHover` property of `dismiss` option must be a Boolean',\r\n  DISMISS_ONSCREEN_BOOL:\r\n    'Validation error. `onScreen` property of `dismiss` option must be a Boolean',\r\n  DISMISS_ICON: 'Validation error. `showIcon` property of `dismiss` option must be a Boolean',\r\n\r\n  TITLE_STRING: 'Validation error. `title` option must be a String',\r\n  TITLE_ELEMENT: 'Validation error. `title` option must be a valid React element/function',\r\n\r\n  MESSAGE_REQUIRED: 'Validation error. `message` option is required',\r\n  MESSAGE_STRING: 'Validation error. `message` option must be a String',\r\n  MESSAGE_ELEMENT: 'Validation error. `message` option must be a valid React element/function',\r\n\r\n  TYPE_REQUIRED: 'Validation error. `type` option is required',\r\n  TYPE_STRING: 'Validation error. `type` option must be a String',\r\n  TYPE_NOT_EXISTENT: 'Validation error. `type` option not found',\r\n\r\n  CONTAINER_REQUIRED: 'Validation error. `container` option is required',\r\n  CONTAINER_STRING: 'Validation error. `container` option must be a String',\r\n  CONTENT_INVALID:\r\n    'Validation error. `content` option must be a valid React component/function/element',\r\n\r\n  WIDTH_NUMBER: 'Validation error. `width` option must be a Number',\r\n  INSERT_STRING: 'Validation error. `insert` option must be a String',\r\n\r\n  TRANSITION_DURATION_NUMBER:\r\n    'Validation error. `duration` property of `transition` option must be a Number',\r\n  TRANSITION_TIMING_FUNCTION:\r\n    'Validation error. `timingFunction` property of `transition` option must be a String',\r\n  TRANSITION_DELAY_NUMBER:\r\n    'Validation error. `delay` property of `transition` option must be a Number',\r\n\r\n  TYPE_NOT_FOUND: 'Validation error. Custom type not found',\r\n  REMOVAL_FUNC: 'Validation error. `onRemoval` must be a function'\r\n};\r\n","import { iNotification, iNotificationCustomType } from 'src/types/Notification';\r\nimport { parseNotification } from 'src/utils/helpers';\r\nimport { validateTransition, validators } from 'src/utils/validators';\r\n\r\ninterface iStore {\r\n  addNotification(notification: iNotification): string;\r\n  removeNotification(id: string): void;\r\n  register(param: iRegisterParams): void;\r\n}\r\n\r\ninterface iRegisterParams {\r\n  addNotification: (notification: iNotification) => string;\r\n  removeNotification: (id: string) => void;\r\n  removeAllNotifications: () => void;\r\n  types: iNotificationCustomType[];\r\n  defaultNotificationWidth: number;\r\n}\r\n\r\nclass Store implements iStore {\r\n  constructor() {\r\n    this.counter = 0;\r\n    this.add = null;\r\n  }\r\n\r\n  public removeNotification: (id: string) => void;\r\n  public removeAllNotifications: () => void;\r\n\r\n  private types: iNotificationCustomType[];\r\n  private add: (notification: iNotification) => string;\r\n  private defaultNotificationWidth: number;\r\n  private counter: number;\r\n\r\n  private incrementCounter = () => (this.counter += 1);\r\n\r\n  public addNotification(notification: iNotification) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const transitions = ['slidingEnter', 'slidingExit', 'touchRevert', 'touchSlidingExit'];\r\n      transitions.forEach((transition) => validateTransition(notification, transition));\r\n      validators.forEach((validator) => validator(notification, this.types));\r\n    }\r\n\r\n    this.incrementCounter();\r\n\r\n    const parsedNotification = parseNotification(\r\n      notification,\r\n      this.types,\r\n      this.defaultNotificationWidth\r\n    );\r\n    return this.add(parsedNotification);\r\n  }\r\n\r\n  public getCounter = () => this.counter;\r\n\r\n  public register(parameters: iRegisterParams) {\r\n    const {\r\n      addNotification,\r\n      removeNotification,\r\n      removeAllNotifications,\r\n      types,\r\n      defaultNotificationWidth\r\n    } = parameters;\r\n\r\n    this.add = addNotification;\r\n    this.removeNotification = removeNotification;\r\n    this.removeAllNotifications = removeAllNotifications;\r\n    this.defaultNotificationWidth = defaultNotificationWidth;\r\n    this.types = types;\r\n  }\r\n}\r\n\r\nexport default new Store();\r\n","import store from 'src/store';\r\nimport {\r\n  iDismiss,\r\n  iNotification,\r\n  iNotificationCustomType,\r\n  iTouchTransition,\r\n  iTransition\r\n} from 'src/types/Notification';\r\nimport {\r\n  INSERTION,\r\n  NOTIFICATION_BASE_CLASS,\r\n  NOTIFICATION_CONTAINER,\r\n  NOTIFICATION_TYPE,\r\n  NOTIFICATION_TYPE as NT\r\n} from 'src/utils/constants';\r\n\r\nexport const isNull = (object: any) => object === null || object === undefined;\r\n\r\nexport function isBottomContainer(container: string) {\r\n  return (\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_FULL ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_LEFT ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_RIGHT ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_CENTER\r\n  );\r\n}\r\n\r\nexport function isTopContainer(container: string) {\r\n  return (\r\n    container === NOTIFICATION_CONTAINER.TOP_FULL ||\r\n    container === NOTIFICATION_CONTAINER.TOP_LEFT ||\r\n    container === NOTIFICATION_CONTAINER.TOP_RIGHT ||\r\n    container === NOTIFICATION_CONTAINER.TOP_CENTER\r\n  );\r\n}\r\n\r\nexport function hasFullySwiped(diffX: number, width: number) {\r\n  const swipeLength = Math.abs(diffX);\r\n  const requiredSwipeLength = (40 / 100) * width;\r\n  return swipeLength >= requiredSwipeLength;\r\n}\r\n\r\nexport function shouldNotificationHaveSliding(notification: iNotification, count: number) {\r\n  if (count <= 1) {\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    count > 1 &&\r\n    ((notification.insert === INSERTION.TOP && isTopContainer(notification.container)) ||\r\n      (notification.insert === INSERTION.BOTTOM && isBottomContainer(notification.container)) ||\r\n      notification.container === NOTIFICATION_CONTAINER.CENTER)\r\n  );\r\n}\r\n\r\nexport function htmlClassesForExistingType(type: NOTIFICATION_TYPE) {\r\n  switch (type) {\r\n    case NT.DEFAULT:\r\n      return [NOTIFICATION_BASE_CLASS, 'notification__item--default'];\r\n    case NT.SUCCESS:\r\n      return [NOTIFICATION_BASE_CLASS, 'notification__item--success'];\r\n    case NT.DANGER:\r\n      return [NOTIFICATION_BASE_CLASS, 'notification__item--danger'];\r\n    case NT.WARNING:\r\n      return [NOTIFICATION_BASE_CLASS, 'notification__item--warning'];\r\n    case NT.INFO:\r\n      return [NOTIFICATION_BASE_CLASS, 'notification__item--info'];\r\n    default:\r\n      return [NOTIFICATION_BASE_CLASS];\r\n  }\r\n}\r\n\r\nexport function getHtmlClassesForType(notification: iNotification) {\r\n  const { type, content, userDefinedTypes } = notification;\r\n  const base = [NOTIFICATION_BASE_CLASS];\r\n  if (content) {\r\n    return base;\r\n  }\r\n\r\n  if (isNull(userDefinedTypes)) {\r\n    return htmlClassesForExistingType(type);\r\n  }\r\n\r\n  const foundType = userDefinedTypes.find((q) => q.name === type);\r\n  return base.concat(foundType.htmlClasses);\r\n}\r\n\r\nexport function getNotificationsForMobileView(notifications: iNotification[]) {\r\n  const top: iNotification[] = [];\r\n  const bottom: iNotification[] = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const { container } = notification;\r\n    const { CENTER } = NOTIFICATION_CONTAINER;\r\n\r\n    if (isTopContainer(container) || container === CENTER) {\r\n      top.push(notification);\r\n    } else if (isBottomContainer(container)) {\r\n      bottom.push(notification);\r\n    }\r\n  });\r\n\r\n  return { top, bottom };\r\n}\r\n\r\nexport function getNotificationsForEachContainer(notifications: iNotification[]) {\r\n  const topLeft: iNotification[] = [];\r\n  const topRight: iNotification[] = [];\r\n  const topCenter: iNotification[] = [];\r\n  const bottomLeft: iNotification[] = [];\r\n  const bottomRight: iNotification[] = [];\r\n  const bottomCenter: iNotification[] = [];\r\n  const center: iNotification[] = [];\r\n  const topFull: iNotification[] = [];\r\n  const bottomFull: iNotification[] = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const { container } = notification;\r\n    if (container === NOTIFICATION_CONTAINER.TOP_FULL) {\r\n      topFull.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_FULL) {\r\n      bottomFull.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_LEFT) {\r\n      topLeft.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_RIGHT) {\r\n      topRight.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_CENTER) {\r\n      topCenter.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_LEFT) {\r\n      bottomLeft.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_RIGHT) {\r\n      bottomRight.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_CENTER) {\r\n      bottomCenter.push(notification);\r\n    } else if (container === NOTIFICATION_CONTAINER.CENTER) {\r\n      center.push(notification);\r\n    }\r\n  });\r\n\r\n  return {\r\n    topFull,\r\n    bottomFull,\r\n    topLeft,\r\n    topRight,\r\n    topCenter,\r\n    bottomLeft,\r\n    bottomRight,\r\n    bottomCenter,\r\n    center\r\n  };\r\n}\r\n\r\nexport function getTransition({ duration, timingFunction, delay }: iTransition, property: string) {\r\n  return `${duration}ms ${property} ${timingFunction} ${delay}ms`;\r\n}\r\n\r\nfunction defaultTransition(\r\n  transition: iTransition,\r\n  { duration, timingFunction, delay }: iTransition\r\n) {\r\n  const transitionOptions = transition || ({} as iTransition);\r\n\r\n  if (isNull(transitionOptions.duration)) {\r\n    transitionOptions.duration = duration;\r\n  }\r\n\r\n  if (isNull(transitionOptions.timingFunction)) {\r\n    transitionOptions.timingFunction = timingFunction;\r\n  }\r\n\r\n  if (isNull(transitionOptions.delay)) {\r\n    transitionOptions.delay = delay;\r\n  }\r\n\r\n  return transitionOptions;\r\n}\r\n\r\nfunction defaultDismiss(dismiss: iDismiss): iDismiss {\r\n  const option = dismiss;\r\n  const defaults: iDismiss = {\r\n    duration: 0,\r\n    click: true,\r\n    touch: true,\r\n    onScreen: false,\r\n    pauseOnHover: false,\r\n    waitForAnimation: false,\r\n    showIcon: false\r\n  };\r\n\r\n  if (!option) {\r\n    return defaults;\r\n  }\r\n\r\n  Object.keys(defaults).forEach((prop) => {\r\n    if (isNull(option[prop])) {\r\n      option[prop] = defaults[prop];\r\n    }\r\n  });\r\n\r\n  return option;\r\n}\r\n\r\nfunction defaultUserDefinedTypes(\r\n  notification: iNotification,\r\n  definedTypes: iNotificationCustomType[]\r\n) {\r\n  const { content, type } = notification;\r\n  if (content) {\r\n    return undefined;\r\n  }\r\n\r\n  if (\r\n    type === NT.SUCCESS ||\r\n    type === NT.DANGER ||\r\n    type === NT.INFO ||\r\n    type === NT.DEFAULT ||\r\n    type === NT.WARNING ||\r\n    !definedTypes\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  return definedTypes;\r\n}\r\n\r\nexport function parseNotification(\r\n  options: iNotification,\r\n  userDefinedTypes: iNotificationCustomType[],\r\n  defaultNotificationWidth: number\r\n): iNotification {\r\n  const notification = options;\r\n  const {\r\n    id,\r\n    type,\r\n    insert,\r\n    content,\r\n    container,\r\n    animationIn,\r\n    animationOut,\r\n    slidingEnter,\r\n    slidingExit,\r\n    touchRevert,\r\n    touchSlidingExit,\r\n    dismiss,\r\n    width,\r\n    onRemoval\r\n  } = notification;\r\n\r\n  notification.id = id || store.getCounter().toString();\r\n  notification.type = content ? null : (type.toLowerCase() as NOTIFICATION_TYPE);\r\n\r\n  if (userDefinedTypes && !content) {\r\n    notification.userDefinedTypes = defaultUserDefinedTypes(notification, userDefinedTypes);\r\n  }\r\n\r\n  notification.width = isNull(width) ? defaultNotificationWidth : width;\r\n  notification.container = container.toLowerCase() as NOTIFICATION_CONTAINER;\r\n  notification.insert = (insert || 'top').toLowerCase() as INSERTION;\r\n  notification.dismiss = defaultDismiss(dismiss);\r\n  notification.animationIn = animationIn || [];\r\n  notification.animationOut = animationOut || [];\r\n  notification.onRemoval = onRemoval || (() => {});\r\n\r\n  const t = (duration: number, timingFunction: string, delay: number) => ({\r\n    duration,\r\n    timingFunction,\r\n    delay\r\n  });\r\n\r\n  notification.slidingEnter = defaultTransition(slidingEnter, t(600, 'linear', 0));\r\n  notification.slidingExit = defaultTransition(slidingExit, t(600, 'linear', 0));\r\n  notification.touchRevert = defaultTransition(touchRevert, t(600, 'linear', 0));\r\n\r\n  const touchExit = touchSlidingExit || ({} as iTouchTransition);\r\n  const swipe = touchExit.swipe || ({} as iTransition);\r\n  const fade = touchExit.fade || ({} as iTransition);\r\n  notification.touchSlidingExit = touchExit;\r\n  notification.touchSlidingExit.swipe = defaultTransition(swipe, t(600, 'linear', 0));\r\n  notification.touchSlidingExit.fade = defaultTransition(fade, t(300, 'linear', 0));\r\n\r\n  return notification;\r\n}\r\n","export default class Timer {\r\n  constructor(callback: Function, delay: number) {\r\n    this.callback = callback;\r\n    this.remaining = delay;\r\n\r\n    this.resume();\r\n  }\r\n\r\n  private timerId: number;\r\n  private start: number;\r\n  private remaining: number;\r\n  private callback: Function;\r\n\r\n  public pause() {\r\n    clearTimeout(this.timerId);\r\n    this.remaining -= Date.now() - this.start;\r\n  }\r\n\r\n  resume() {\r\n    this.start = Date.now();\r\n    clearTimeout(this.timerId);\r\n    this.timerId = setTimeout(this.callback, this.remaining);\r\n  }\r\n\r\n  clear() {\r\n    clearTimeout(this.timerId);\r\n  }\r\n}","import React from 'react';\r\nimport { iNotification } from 'src/types/Notification';\r\nimport { NOTIFICATION_CONTAINER as NC, REMOVAL } from '../utils/constants';\r\nimport {\r\n  getHtmlClassesForType,\r\n  getTransition,\r\n  hasFullySwiped,\r\n  shouldNotificationHaveSliding\r\n} from '../utils/helpers';\r\nimport Timer from '../utils/timer';\r\n\r\nclass iNotificationProps {\r\n  id: string;\r\n  notification: iNotification;\r\n  defaultNotificationWidth: number;\r\n  notificationsCount: number;\r\n  isMobile: boolean;\r\n  hasBeenRemoved: boolean;\r\n  toggleRemoval: (id: string, callback: () => void) => void;\r\n}\r\n\r\ninterface iNotificationState {\r\n  parentStyle?: iParentStyle;\r\n  htmlClassList?: string[];\r\n  animationPlayState?: string;\r\n  touchEnabled?: boolean;\r\n  onTransitionEnd?: (event: React.TransitionEvent<HTMLDivElement>) => void;\r\n  onAnimationEnd?: (event: React.AnimationEvent<HTMLDivElement>) => void;\r\n  startX?: number;\r\n  currentX?: number;\r\n}\r\n\r\ninterface iParentStyle {\r\n  height?: string;\r\n  overflow?: string;\r\n  width?: string;\r\n  transition?: string;\r\n}\r\n\r\nclass Notification extends React.Component<iNotificationProps, iNotificationState> {\r\n  constructor(props: iNotificationProps) {\r\n    super(props);\r\n    this.rootElementRef = React.createRef();\r\n\r\n    const { defaultNotificationWidth, notification, isMobile } = props;\r\n    const { width, container } = notification;\r\n\r\n    this.state = {\r\n      parentStyle: {\r\n        height: `0px`,\r\n        overflow: 'hidden',\r\n        width: `${width ? width : defaultNotificationWidth}px`\r\n      },\r\n      htmlClassList: getHtmlClassesForType(notification),\r\n      animationPlayState: 'running',\r\n      touchEnabled: true\r\n    };\r\n\r\n    const isFullWidthNotification = [NC.TOP_FULL, NC.BOTTOM_FULL, NC.TOP_CENTER, NC.BOTTOM_CENTER, NC.CENTER].indexOf(container) !== -1\r\n    if (isMobile || isFullWidthNotification) {\r\n      this.state.parentStyle.width = '100%';\r\n    }\r\n  }\r\n\r\n  private readonly rootElementRef: React.RefObject<HTMLDivElement>;\r\n  private timer: Timer;\r\n\r\n  componentWillUnmount() {\r\n    if (this.timer) {\r\n      this.timer.clear();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { notification, notificationsCount } = this.props;\r\n    const {\r\n      dismiss: { duration, onScreen }\r\n    } = notification;\r\n    const willSlide = shouldNotificationHaveSliding(notification, notificationsCount);\r\n    const { scrollHeight } = this.rootElementRef.current;\r\n\r\n    const onTransitionEnd = () => {\r\n      if (!duration || onScreen) return;\r\n      const callback = () => this.removeNotification(REMOVAL.TIMEOUT);\r\n      this.timer = new Timer(callback, duration);\r\n    };\r\n\r\n    const callback = () => {\r\n      requestAnimationFrame(() => {\r\n        this.setState((prevState) => ({\r\n          htmlClassList: [...notification.animationIn, ...prevState.htmlClassList]\r\n        }));\r\n      });\r\n    };\r\n\r\n    this.setState(\r\n      ({ parentStyle: { width } }) => ({\r\n        parentStyle: {\r\n          width,\r\n          height: `${scrollHeight}px`,\r\n          transition: willSlide ? getTransition(notification.slidingEnter, 'height') : '10ms height'\r\n        },\r\n        onTransitionEnd\r\n      }),\r\n      callback\r\n    );\r\n  }\r\n\r\n  componentDidUpdate({ hasBeenRemoved }: iNotificationProps) {\r\n    if (this.props.hasBeenRemoved && !hasBeenRemoved) {\r\n      this.removeNotification(REMOVAL.MANUAL);\r\n    }\r\n  }\r\n\r\n  removeNotification(removalFlag: string) {\r\n    const { notification, toggleRemoval } = this.props;\r\n    const {\r\n      id,\r\n      onRemoval,\r\n      dismiss: { waitForAnimation }\r\n    } = notification;\r\n\r\n    const htmlClassList = [...notification.animationOut, ...getHtmlClassesForType(notification)];\r\n    const onTransitionEnd = () => toggleRemoval(id, () => onRemoval(id, removalFlag));\r\n    const parentStyle: iParentStyle = {\r\n      height: `0px`,\r\n      overflow: 'hidden',\r\n      transition: getTransition(notification.slidingExit, 'height')\r\n    };\r\n\r\n    if (waitForAnimation) {\r\n      return this.setState(({ parentStyle: { width } }) => ({\r\n        htmlClassList,\r\n        onAnimationEnd: () => {\r\n          this.setState({\r\n            parentStyle: {\r\n              width,\r\n              ...parentStyle\r\n            },\r\n            onTransitionEnd\r\n          });\r\n        }\r\n      }));\r\n    }\r\n\r\n    return this.setState(({ parentStyle: { width } }) => ({\r\n      parentStyle: {\r\n        width,\r\n        ...parentStyle\r\n      },\r\n      onTransitionEnd,\r\n      htmlClassList\r\n    }));\r\n  }\r\n\r\n  onClick = () => {\r\n    const {\r\n      notification: { dismiss }\r\n    } = this.props;\r\n    if (dismiss.click || dismiss.showIcon) {\r\n      this.removeNotification(REMOVAL.CLICK);\r\n    }\r\n  };\r\n\r\n  onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\r\n    const { pageX } = event.touches[0];\r\n\r\n    this.setState(({ parentStyle }) => ({\r\n      startX: pageX,\r\n      currentX: pageX,\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        position: 'relative'\r\n      }\r\n    }));\r\n  };\r\n\r\n  onTouchMove = (event: React.TouchEvent) => {\r\n    const { pageX } = event.touches[0];\r\n    const { startX } = this.state;\r\n    const {\r\n      toggleRemoval,\r\n      notification: {\r\n        id,\r\n        onRemoval,\r\n        slidingExit,\r\n        touchSlidingExit: { swipe, fade }\r\n      }\r\n    } = this.props;\r\n\r\n    const distance = pageX - startX;\r\n    const { offsetWidth: width } = this.rootElementRef.current;\r\n    const swipeTo = window.innerWidth + width;\r\n    const left = `${pageX - startX >= 0 ? swipeTo : -swipeTo}px`;\r\n\r\n    if (hasFullySwiped(distance, width)) {\r\n      const t1 = getTransition(swipe, 'left');\r\n      const t2 = getTransition(fade, 'opacity');\r\n      const onTransitionEnd = () => {\r\n        toggleRemoval(id, () => onRemoval(id, REMOVAL.TOUCH));\r\n      };\r\n\r\n      return this.setState(({ parentStyle }) => ({\r\n        touchEnabled: false,\r\n        parentStyle: {\r\n          ...parentStyle,\r\n          left,\r\n          opacity: 0,\r\n          transition: `${t1}, ${t2}`\r\n        },\r\n        onTransitionEnd: () => {\r\n          this.setState(({ parentStyle }) => ({\r\n            parentStyle: {\r\n              ...parentStyle,\r\n              height: `0px`,\r\n              overflow: 'hidden',\r\n              transition: getTransition(slidingExit, 'height')\r\n            },\r\n            onTransitionEnd\r\n          }));\r\n        }\r\n      }));\r\n    }\r\n\r\n    return this.setState(({ parentStyle }) => ({\r\n      currentX: pageX,\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        left: `${0 + distance}px`\r\n      }\r\n    }));\r\n  };\r\n\r\n  onTouchEnd = () => {\r\n    const {\r\n      notification: { touchRevert }\r\n    } = this.props;\r\n\r\n    this.setState(({ parentStyle }) => ({\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        left: 0,\r\n        transition: getTransition(touchRevert, 'left')\r\n      }\r\n    }));\r\n  };\r\n\r\n  onMouseEnter = () => {\r\n    if (this.timer) {\r\n      this.timer.pause();\r\n    } else {\r\n      this.setState({ animationPlayState: 'paused' });\r\n    }\r\n  };\r\n\r\n  onMouseLeave = () => {\r\n    if (this.timer) {\r\n      this.timer.resume();\r\n    } else {\r\n      this.setState({ animationPlayState: 'running' });\r\n    }\r\n  };\r\n\r\n  renderTimer() {\r\n    const {\r\n      notification: { dismiss }\r\n    } = this.props;\r\n    const { duration, onScreen } = dismiss;\r\n    const { animationPlayState } = this.state;\r\n\r\n    if (!duration || !onScreen) {\r\n      return;\r\n    }\r\n\r\n    const style = {\r\n      animationName: 'timer',\r\n      animationDuration: `${duration}ms`,\r\n      animationTimingFunction: 'linear',\r\n      animationFillMode: 'forwards',\r\n      animationDelay: `0`,\r\n      animationPlayState\r\n    };\r\n\r\n    const onAnimationEnd = () => this.removeNotification(REMOVAL.TIMEOUT);\r\n    return (\r\n      <div className=\"notification__timer\">\r\n        <div\r\n          className=\"notification__timer-filler\"\r\n          onAnimationEnd={onAnimationEnd}\r\n          style={style}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCustomContent() {\r\n    const { htmlClassList } = this.state;\r\n    const {\r\n      notification: {\r\n        id,\r\n        content: CustomContent,\r\n        dismiss: { duration, pauseOnHover }\r\n      }\r\n    } = this.props;\r\n\r\n    const hasMouseEvents = duration > 0 && pauseOnHover;\r\n\r\n    return (\r\n      <div\r\n        className={`${[...htmlClassList].join(' ')}`}\r\n        onMouseEnter={hasMouseEvents ? this.onMouseEnter : null}\r\n        onMouseLeave={hasMouseEvents ? this.onMouseLeave : null}\r\n      >\r\n        {React.isValidElement(CustomContent) ? CustomContent : <CustomContent {...{ id }} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNotification() {\r\n    const {\r\n      notification: {\r\n        title,\r\n        message,\r\n        dismiss: { showIcon, duration, pauseOnHover }\r\n      }\r\n    } = this.props;\r\n    const { htmlClassList } = this.state;\r\n    const hasMouseEvents = duration > 0 && pauseOnHover;\r\n\r\n    return (\r\n      <div\r\n        className={`${[...htmlClassList].join(' ')}`}\r\n        onMouseEnter={hasMouseEvents ? this.onMouseEnter : null}\r\n        onMouseLeave={hasMouseEvents ? this.onMouseLeave : null}\r\n      >\r\n        <div className=\"notification__content\">\r\n          {showIcon && <div className=\"notification__close\" onClick={this.onClick}></div>}\r\n          {title && <div className=\"notification__title\">{title}</div>}\r\n          <div className=\"notification__message\">{message}</div>\r\n          {this.renderTimer()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      notification: {\r\n        content,\r\n        dismiss: { click }\r\n      }\r\n    } = this.props;\r\n    const { parentStyle, onAnimationEnd, onTransitionEnd, touchEnabled } = this.state;\r\n\r\n    return (\r\n      <div\r\n        ref={this.rootElementRef}\r\n        onClick={click ? this.onClick : null}\r\n        className=\"notification\"\r\n        style={parentStyle}\r\n        onAnimationEnd={onAnimationEnd}\r\n        onTransitionEnd={onTransitionEnd}\r\n        onTouchStart={touchEnabled ? this.onTouchStart : null}\r\n        onTouchMove={touchEnabled ? this.onTouchMove : null}\r\n        onTouchEnd={touchEnabled ? this.onTouchEnd : null}\r\n      >\r\n        {content ? this.renderCustomContent() : this.renderNotification()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactNotification from 'src/components/Notification';\r\nimport 'src/scss/notification.scss';\r\nimport store from 'src/store';\r\nimport { DEFAULT_CONTAINER_VALUES as DCV } from 'src/utils/constants';\r\nimport { iNotification, iNotificationCustomType } from 'src/types/Notification';\r\nimport {\r\n  getNotificationsForEachContainer,\r\n  getNotificationsForMobileView,\r\n  isNull\r\n} from 'src/utils/helpers';\r\n\r\ninterface iContainerProps {\r\n  isMobile?: boolean;\r\n  breakpoint?: number;\r\n  types?: iNotificationCustomType[];\r\n  defaultNotificationWidth?: number;\r\n}\r\n\r\ninterface iContainerState {\r\n  isMobile: boolean;\r\n  breakpoint: number;\r\n  notifications: iNotification[];\r\n  windowWidth: number;\r\n}\r\n\r\nclass Container extends React.Component<iContainerProps, iContainerState> {\r\n  constructor(props: iContainerProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMobile: isNull(props.isMobile) ? DCV.isMobile : props.isMobile,\r\n      breakpoint: isNull(props.breakpoint) ? DCV.breakpoint : props.breakpoint,\r\n      notifications: [],\r\n      windowWidth: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { types, defaultNotificationWidth } = this.props;\r\n\r\n    store.register({\r\n      addNotification: this.add,\r\n      removeNotification: this.remove,\r\n      removeAllNotifications: this.removeAllNotifications,\r\n      defaultNotificationWidth: defaultNotificationWidth || DCV.defaultNotificationWidth,\r\n      types\r\n    });\r\n\r\n    this.setState({ windowWidth: window.innerWidth });\r\n    window.addEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n  };\r\n\r\n  add = (notification: iNotification) => {\r\n    this.setState(({ notifications }) => ({\r\n      notifications:\r\n        notification.insert === 'top'\r\n          ? [notification, ...notifications]\r\n          : [...notifications, notification]\r\n    }));\r\n\r\n    return notification.id;\r\n  };\r\n\r\n  remove = (id: string) => {\r\n    this.setState(({ notifications }) => ({\r\n      notifications: notifications.map((notification) => {\r\n        if (notification.id === id) {\r\n          notification.hasBeenRemoved = true;\r\n        }\r\n\r\n        return notification;\r\n      })\r\n    }));\r\n  };\r\n\r\n  removeAllNotifications = () => {\r\n    this.setState({\r\n      notifications: this.state.notifications.map((notification) => ({\r\n        ...notification,\r\n        hasBeenRemoved: true\r\n      }))\r\n    });\r\n  };\r\n\r\n  toggleRemoval = (id: string, callback: () => void) => {\r\n    this.setState(\r\n      ({ notifications }) => ({\r\n        notifications: notifications.filter(({ id: nId }) => nId !== id)\r\n      }),\r\n      callback\r\n    );\r\n  };\r\n\r\n  renderNotifications(notifications: iNotification[], isMobile: boolean) {\r\n    return notifications.map((notification) => (\r\n      <ReactNotification\r\n        id={notification.id}\r\n        key={notification.id}\r\n        isMobile={isMobile}\r\n        defaultNotificationWidth={this.props.defaultNotificationWidth}\r\n        notification={notification}\r\n        toggleRemoval={this.toggleRemoval}\r\n        notificationsCount={notifications.length}\r\n        hasBeenRemoved={notification.hasBeenRemoved}\r\n      />\r\n    ));\r\n  }\r\n\r\n  renderMobileNotifications(props) {\r\n    const { className, id } = props;\r\n    const { notifications } = this.state;\r\n    const mobileNotifications = getNotificationsForMobileView(notifications);\r\n    const top = this.renderNotifications(mobileNotifications.top, true);\r\n    const bottom = this.renderNotifications(mobileNotifications.bottom, true);\r\n\r\n    return (\r\n      <div id={id} key=\"mobile\" className={`notifications-component ${className || ''}`}>\r\n        <div className=\"notification-container--mobile-top\">{top}</div>\r\n        <div className=\"notification-container--mobile-bottom\">{bottom}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderScreenNotifications(props) {\r\n    const { className, id } = props;\r\n    const { notifications } = this.state;\r\n    const items = getNotificationsForEachContainer(notifications);\r\n    const topFull = this.renderNotifications(items.topFull, false);\r\n    const bottomFull = this.renderNotifications(items.bottomFull, false);\r\n    const topLeft = this.renderNotifications(items.topLeft, false);\r\n    const topRight = this.renderNotifications(items.topRight, false);\r\n    const topCenter = this.renderNotifications(items.topCenter, false);\r\n    const bottomLeft = this.renderNotifications(items.bottomLeft, false);\r\n    const bottomRight = this.renderNotifications(items.bottomRight, false);\r\n    const bottomCenter = this.renderNotifications(items.bottomCenter, false);\r\n    const center = this.renderNotifications(items.center, false);\r\n\r\n    return (\r\n      <div id={id} key=\"screen\" className={`notifications-component ${className || ''}`}>\r\n        <div className=\"notification-container--top-full\">{topFull}</div>\r\n        <div className=\"notification-container--bottom-full\">{bottomFull}</div>\r\n        <div className=\"notification-container--top-left\">{topLeft}</div>\r\n        <div className=\"notification-container--top-right\">{topRight}</div>\r\n        <div className=\"notification-container--bottom-left\">{bottomLeft}</div>\r\n        <div className=\"notification-container--bottom-right\">{bottomRight}</div>\r\n        <div className=\"notification-container--top-center\">{topCenter}</div>\r\n        <div className=\"notification-container--center\">\r\n          <div className=\"flex-center\">{center}</div>\r\n        </div>\r\n        <div className=\"notification-container--bottom-center\">{bottomCenter}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isMobile } = this.props;\r\n    const { windowWidth, breakpoint } = this.state;\r\n\r\n    if (isMobile && windowWidth <= breakpoint) {\r\n      return this.renderMobileNotifications(this.props);\r\n    }\r\n\r\n    return this.renderScreenNotifications(this.props);\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import container from 'src/components/Container';\r\nimport store from 'src/store';\r\n\r\nexport { store };\r\n\r\nexport default container;"],"sourceRoot":""}